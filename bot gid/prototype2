import telebot
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import os
import requests
import time


bot = telebot.TeleBot('7780668347:AAFTwSbXzNg02naVu_g2x-k2GiPiYPVlOng')
api_key = '17697edb22cd6287f4a12ccb3e497513'


cities = [
   "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫", "–ö–æ–∫—à–µ—Ç–∞—É", "–ö–æ—Å—Ç–∞–Ω–∞–π", "–ê—Å—Ç–∞–Ω–∞",
   "–®—ã–º–∫–µ–Ω—Ç", "–¢–∞—Ä–∞–∑", "–ö—ã–∑—ã–ª–æ—Ä–¥–∞", "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω", "–ê–ª–º–∞—Ç—ã",
   "–ê—Ç—ã—Ä–∞—É", "–£—Ä–∞–ª—å—Å–∫", "–ê–∫—Ç–∞—É", "–ê–∫—Ç–æ–±–µ",
   "–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫", "–°–µ–º–µ–π", "–ü–∞–≤–ª–æ–¥–∞—Ä",
   "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞", "–¢–µ–º–∏—Ä—Ç–∞—É", "–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω"
]

city_maps = {
   "–ê—Å—Ç–∞–Ω–∞": "https://www.google.com/maps/search/?q=–ê—Å—Ç–∞–Ω–∞&hl=ru",
   "–ê–ª–º–∞—Ç—ã": "https://www.google.com/maps/search/?q=–ê–ª–º–∞—Ç—ã&hl=ru",
   "–®—ã–º–∫–µ–Ω—Ç": "https://www.google.com/maps/search/?q=–®—ã–º–∫–µ–Ω—Ç&hl=ru",
   "–ö–æ–∫—à–µ—Ç–∞—É": "https://www.google.com/maps/search/?q=–ö–æ–∫—à–µ—Ç–∞—É&hl=ru",
   "–ö–æ—Å—Ç–∞–Ω–∞–π": "https://www.google.com/maps/search/?q=–ö–æ—Å—Ç–∞–Ω–∞–π&hl=ru",
   "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫": "https://www.google.com/maps/search/?q=–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫&hl=ru",
   "–¢–∞—Ä–∞–∑": "https://www.google.com/maps/search/?q=–¢–∞—Ä–∞–∑&hl=ru",
   "–ö—ã–∑—ã–ª–æ—Ä–¥–∞": "https://www.google.com/maps/search/?q=–ö—ã–∑—ã–ª–æ—Ä–¥–∞&hl=ru",
   "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω": "https://www.google.com/maps/search/?q=–¢—É—Ä–∫–µ—Å—Ç–∞–Ω&hl=ru",
   "–ê—Ç—ã—Ä–∞—É": "https://www.google.com/maps/search/?q=–ê—Ç—ã—Ä–∞—É&hl=ru",
   "–£—Ä–∞–ª—å—Å–∫": "https://www.google.com/maps/search/?q=–£—Ä–∞–ª—å—Å–∫&hl=ru",
   "–ê–∫—Ç–∞—É": "https://www.google.com/maps/search/?q=–ê–∫—Ç–∞—É&hl=ru",
   "–ê–∫—Ç–æ–±–µ": "https://www.google.com/maps/search/?q=–ê–∫—Ç–æ–±–µ&hl=ru",
   "–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫": "https://www.google.com/maps/search/?q=–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫&hl=ru",
   "–°–µ–º–µ–π": "https://www.google.com/maps/search/?q=–°–µ–º–µ–π&hl=ru",
   "–ü–∞–≤–ª–æ–¥–∞—Ä": "https://www.google.com/maps/search/?q=–ü–∞–≤–ª–æ–¥–∞—Ä&hl=ru",
   "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞": "https://www.google.com/maps/search/?q=–ö–∞—Ä–∞–≥–∞–Ω–¥–∞&hl=ru",
   "–¢–µ–º–∏—Ä—Ç–∞—É": "https://www.google.com/maps/search/?q=–¢–µ–º–∏—Ä—Ç–∞—É&hl=ru",
   "–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω": "https://www.google.com/maps/search/?q=–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω&hl=ru"
}


@bot.message_handler(commands=['help'])
def help(message):
   bot.send_message(message.chat.id, 
                     "<b>–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                     "/start ‚Äî –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º\n"
                     "/help ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –±–æ—Ç–µ\n"
                     "/about ‚Äî —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ\n"
                     "/stop ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º", parse_mode='html')

@bot.message_handler(commands=['about'])
def about(message):
   bot.send_message(message.chat.id, 
                     "–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∏–∑—É—á–µ–Ω–∏—é Python –∏ Telegram API.\n"
                     "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: <em><b>yerazz</b></em>", parse_mode='html')

@bot.message_handler(commands=['stop'])
def stop(message):

   # chat_id = message.chat.id
   # for i in range(message.message_id - 20, message.message_id + 1):
   #    try:
   #       bot.delete_message(chat_id, i)
   #    except Exception as e:
   #       print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {i}: {e}")

   bot.send_message(message.chat.id, "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –±–æ–ª—å—à–µ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.")
   os._exit(0)

@bot.message_handler(commands=['start'])
def start(message):
   bot.send_message(message.chat.id, 
                     f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n"
                     "–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥ –ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É! üá∞üáø\n"
                     "–ú–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞, —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ñ–∞–∫—Ç—ã –∏ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É. üåç‚ú®")

   command_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
   command_markup.row('/start', '/stop')
   command_markup.row('/help', '/about')

   inline_markup = types.InlineKeyboardMarkup()
   btn1 = types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥', callback_data='select_city')
   btn2 = types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data='input_city')
   inline_markup.row(btn1, btn2)

   bot.send_message(message.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",  reply_markup=inline_markup)


@bot.callback_query_handler(func=lambda call: True)
def callback(callback):
   if callback.data == 'select_city':
      markup = types.InlineKeyboardMarkup()
      for city in cities:
         markup.add(InlineKeyboardButton(city, callback_data=city))
      bot.send_message(callback.message.chat.id, "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=markup)
   elif callback.data == 'input_city':
      bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
   # elif callback.data in cities:
   #    city = callback.data
   #    bot.send_message(callback.message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ {city}:\n{city_info[city]}")
   #    bot.send_photo(callback.message.chat.id, open(city_images[city], 'rb'))
   #    bot.send_message(callback.message.chat.id, f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ: {city_maps[city]}")

bot.polling(none_stop=True)