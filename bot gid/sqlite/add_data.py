import sqlite3
import csv

# Подключение к базе и создание таблицы, если её нет
def create_table():
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('''
      CREATE TABLE IF NOT EXISTS cities (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT UNIQUE,
            description TEXT,
            image_url TEXT
      )
   ''')
   conn.commit()
   conn.close()


# Функция для добавления города
def add_city(name, description, image_url):
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()

   cursor.execute('INSERT OR REPLACE INTO cities (name, description, image_url) VALUES (?, ?, ?)', 
                  (name, description, image_url))

   conn.commit()
   conn.close()


# Добавляем города вручную
create_table()
add_city("Астана", "Столица Казахстана, известная своей современной архитектурой. Город знаменит своими футуристическими зданиями, такими как Байтерек, Хан Шатыр и Дворец мира и согласия. В Астане проходят важные экономические и культурные форумы мирового уровня. Зимой город превращается в снежную сказку, а летом привлекает гостей своими зелёными парками.", "A:/yer4ss/Work/im python/bot gid/images/Астана.jpg")
add_city("Алматы", "Крупнейший город Казахстана, окружённый живописными горами Заилийского Алатау. Известен как культурный и финансовый центр страны. Здесь расположены знаменитый высокогорный каток Медео, горнолыжный курорт Шымбулак и смотровая площадка Кок-Тобе. Алматы славится своими зелёными улицами, уютными кафе и богатой историей.", "A:/yer4ss/Work/im python/bot gid/images/Алматы.jpg")
add_city("Шымкент", "Третий по величине город Казахстана, известный своими восточными базарами, гостеприимством и богатой историей. Основанный более 2 200 лет назад, он является одним из древнейших городов региона. Здесь можно посетить этнографический комплекс «Кен-Баба», медресе XIX века и Археологический музей.", "A:/yer4ss/Work/im python/bot gid/images/Шымкент.jpg")
add_city("Кокшетау", "Живописный город, окружённый озёрами и лесами. Кокшетау славится своими курортными зонами, такими как Бурабай и Зеренда, привлекающими туристов круглый год. Бурабай часто называют \"Казахстанской Швейцарией\" из-за его горных пейзажей и чистых озёр.", "A:/yer4ss/Work/im python/bot gid/images/Кокшетау.jpg")
add_city("Костанай", "Город с богатым культурным наследием, расположенный на севере Казахстана. Здесь можно найти исторические памятники, музеи и театры. В регионе развита сельскохозяйственная и промышленная отрасль. В Костанае также проходит ежегодный фестиваль «Тобол-фест», посвящённый народным традициям.", "A:/yer4ss/Work/im python/bot gid/images/Костанай.jpg")
add_city("Петропавловск", "Один из старейших городов Казахстана, основанный в XVIII веке. Здесь сохранилось множество архитектурных памятников, включая Петропавловскую крепость. Город известен своими уютными набережными, а также музеем литературы и искусства, посвящённым творчеству казахских писателей.", "A:/yer4ss/Work/im python/bot gid/images/Петропавловск.jpg")
add_city("Тараз", "Один из древнейших городов Центральной Азии с историей более 2 000 лет. Тараз славится древними мавзолеями Карахана и Айша-биби, которые являются важными культурными памятниками. Город также называют 'колыбелью казахской цивилизации' за его археологическое и историческое значение.", "A:/yer4ss/Work/im python/bot gid/images/Тараз.jpg")
add_city("Кызылорда", "Город на реке Сырдарья, исторический центр Казахстана. Здесь в XIX веке располагалась первая столица Казахской АССР. Кызылорда также известна как центр казахской национальной письменности и образования, а поблизости находится знаменитый космодром Байконур.", "A:/yer4ss/Work/im python/bot gid/images/Кызылорда.jpg")
add_city("Туркестан", "Один из самых древних и священных городов Казахстана. Здесь находится мавзолей Ходжи Ахмеда Ясави – объект Всемирного наследия ЮНЕСКО. Туркестан является духовным и культурным центром страны, ежегодно привлекающим тысячи паломников и туристов.", "A:/yer4ss/Work/im python/bot gid/images/Туркестан.jpg")
add_city("Атырау", "Нефтяная столица Казахстана, расположенная на реке Урал. Город разделён на две части, европейскую и азиатскую. Атырау известен своими рыбными промыслами, нефтяными месторождениями и современными небоскрёбами.", "A:/yer4ss/Work/im python/bot gid/images/Атырау.jpg")
add_city("Уральск", "Исторический город на западе Казахстана, основанный в XVI веке. Уральск славится своей старинной архитектурой, особенно Казанским собором и домом Пугачёва. Здесь можно посетить музеи, посвящённые истории казачества и древнего Золотого Орды.", "A:/yer4ss/Work/im python/bot gid/images/Уральск.jpg")
add_city("Актау", "Город у Каспийского моря с красивыми пляжами и скалистыми пейзажами. Является важным портовым и туристическим центром. Вблизи города можно посетить урочище Босжира и подземную мечеть Бекет-Ата, считающуюся святыней.", "A:/yer4ss/Work/im python/bot gid/images/Актау.jpg")
add_city("Актобе", "Динамично развивающийся город на западе Казахстана. Здесь расположены крупные металлургические заводы и современные торговые центры. В окрестностях города можно посетить уникальные геологические образования – меловые горы Актау.", "A:/yer4ss/Work/im python/bot gid/images/Актобе.jpg")
add_city("Усть-Каменогорск", "Город металлургов, расположенный среди гор Восточного Казахстана. Он известен своими красивыми природными пейзажами, такими как Бухтарминское водохранилище и национальный парк Катон-Карагай.", "A:/yer4ss/Work/im python/bot gid/images/Усть-Каменогорск.jpg")
add_city("Семей", "Исторический город, связанный с именем Абая Кунанбаева. В Семее расположен музей Абая, старейшая мечеть Казахстана и мост через Иртыш – один из самых длинных в Центральной Азии.", "A:/yer4ss/Work/im python/bot gid/images/Семей.jpg")
add_city("Павлодар", "Город с развитой промышленностью и живописными набережными. Павлодар известен своими современными театрами, музеями и близостью к национальному парку Баянаул.", "A:/yer4ss/Work/im python/bot gid/images/Павлодар.jpg")
add_city("Караганда", "Крупный промышленный центр Казахстана, связанный с угольной промышленностью. Город славится своим театром имени Станиславского и парком Ботанический сад. Недалеко находится музей ГУЛАГа в поселке Долинка.", "A:/yer4ss/Work/im python/bot gid/images/Караганда.jpg")
add_city("Темиртау", "Город металлургов, важный центр чёрной металлургии Казахстана. Здесь находится крупнейший металлургический завод страны. Также город известен своим ледовым дворцом и живописной набережной реки Нура.", "A:/yer4ss/Work/im python/bot gid/images/Темиртау.jpg")
add_city("Талдыкорган", "Административный центр Жетысуской области. Город славится своим живописным расположением у подножия гор Жетысуского Алатау. Здесь находится монумент Бабаларға тағзым, посвящённый предкам, а также парк Первого Президента и современный культурный центр.", "A:/yer4ss/Work/im python/bot gid/images/Талдыкорган.jpg")


# Функция для получения информации о городе
def get_city_info(name):
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('SELECT description, image_url FROM cities WHERE name = ?', (name,))
   result = cursor.fetchone()
   conn.close()
   return result

# Функция для удаления города
def delete_city(name):
   try:
      conn = sqlite3.connect('cities.db')
      cursor = conn.cursor()

      # Выполняем запрос на удаление города по названию
      cursor.execute('DELETE FROM cities WHERE name = ?', (name,))
      conn.commit()

      # Проверяем, удалился ли город
      if cursor.rowcount > 0:
         print(f"🗑️ Город '{name}' успешно удалён!")
      else:
         print(f"❗ Город '{name}' не найден в базе.")
   except Exception as e:
      print(f"❌ Ошибка при удалении города '{name}': {e}")
   finally:
      conn.close()



def update_city(name, new_description, new_image_url):
   try:
      conn = sqlite3.connect('cities.db')
      cursor = conn.cursor()

      # Обновляем описание и изображение города по названию
      cursor.execute(
            'UPDATE cities SET description = ?, image_url = ? WHERE name = ?',
            (new_description, new_image_url, name)
      )

      conn.commit()

      # Проверяем, обновились ли данные
      if cursor.rowcount > 0:
            print(f"✅ Город '{name}' успешно обновлён!")
      else:
            print(f"❗ Город '{name}' не найден в базе.")

   except Exception as e:
      print(f"❌ Ошибка при обновлении города '{name}': {e}")

   finally:
      conn.close()


# Функция для просмотра всех городов
def get_all_cities():
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('SELECT * FROM cities')
   result = cursor.fetchall()
   conn.close()
   return result


print("✅ Города добавлены!")
print(get_all_cities())


# Функция для экспорта базы в CSV
# def export_to_csv():
#    cities = get_all_cities()
#    with open('cities_export.csv', 'w', newline='', encoding='utf-8') as file:
#       writer = csv.writer(file)
#       writer.writerow(["ID", "Название", "Описание", "Ссылка на изображение"])
#       writer.writerows(cities)
#    print("✅ Данные успешно экспортированы в cities_export.csv!")


# # Интерфейс командной строки
# def main():
#    create_table()
#    print("\n🌍 Добро пожаловать в базу городов Казахстана!")
#    while True:
#       print("\nЧто хотите сделать?")
#       print("1️⃣  Добавить город")
#       print("2️⃣  Посмотреть информацию о городе")
#       print("3️⃣  Удалить город")
#       print("4️⃣  Показать все города")
#       print("5️⃣  Экспортировать базу в CSV")
#       print("6️⃣  Выйти")

#       choice = input("👉 Введите номер команды: ")

#       if choice == "1":
#             name = input("Введите название города: ")
#             description = input("Введите описание города: ")
#             image_url = input("Введите URL изображения: ")
#             add_city(name, description, image_url)
#             print(f"✅ Город {name} добавлен!")

#       elif choice == "2":
#             name = input("Введите название города: ")
#             city = get_city_info(name)
#             if city:
#                print(f"📍 Город: {name}\n📝 Описание: {city[0]}\n🖼️ Ссылка на фото: {city[1]}")
#             else:
#                print("❌ Город не найден!")

#       elif choice == "3":
#             name = input("Введите название города для удаления: ")
#             delete_city(name)
#             print(f"🗑️ Город {name} удалён!")

#       elif choice == "4":
#             print("\n🌍 Список всех городов в базе:")
#             for city in get_all_cities():
#                print(f"📍 {city[1]} — {city[2]}")

#       elif choice == "5":
#             export_to_csv()

#       elif choice == "6":
#             print("👋 До свидания!")
#             break

#       else:
#             print("⚠️ Неправильный выбор, попробуйте снова!")


# if __name__ == "__main__":
#    main()