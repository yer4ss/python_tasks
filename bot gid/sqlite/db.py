import sqlite3


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
def create_table():
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('''
      CREATE TABLE IF NOT EXISTS cities (
         id INTEGER PRIMARY KEY AUTOINCREMENT,
         name TEXT UNIQUE,
         description TEXT,
         image_url TEXT,
         map_url TEXT
      )
   ''')

   print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")

   conn.commit()
   conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞
def add_city(name, description, image_url):
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()

   cursor.execute('INSERT OR IGNORE INTO cities (name, description, image_url) VALUES (?, ?, ?)',       #REPLACE - –∑–∞–º–µ–Ω—è–µ—Ç, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, IGNORE - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç
                  (name, description, image_url))

   conn.commit()
   conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–µ
def get_city_info(name):
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('SELECT description, image_url FROM cities WHERE name = ?', (name,))
   result = cursor.fetchone()
   conn.close()
   return result

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞
def delete_city(name):
   try:
      conn = sqlite3.connect('cities.db')
      cursor = conn.cursor()

      # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
      cursor.execute('DELETE FROM cities WHERE name = ?', (name,))
      conn.commit()

      # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–¥–∞–ª–∏–ª—Å—è –ª–∏ –≥–æ—Ä–æ–¥
      if cursor.rowcount > 0:
         print(f"üóëÔ∏è –ì–æ—Ä–æ–¥ '{name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!")
      else:
         print(f"‚ùó –ì–æ—Ä–æ–¥ '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
   except Exception as e:
      print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ '{name}': {e}")
   finally:
      conn.close()



def update_city(name, new_description, new_image_url):
   try:
      conn = sqlite3.connect('cities.db')
      cursor = conn.cursor()

      # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
      cursor.execute(
            'UPDATE cities SET description = ?, image_url = ? WHERE name = ?',
            (new_description, new_image_url, name)
      )

      conn.commit()

      # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
      if cursor.rowcount > 0:
            print(f"‚úÖ –ì–æ—Ä–æ–¥ '{name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")
      else:
            print(f"‚ùó –ì–æ—Ä–æ–¥ '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")

   except Exception as e:
      print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞ '{name}': {e}")

   finally:
      conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤
def get_all_cities():
   conn = sqlite3.connect('cities.db')
   cursor = conn.cursor()
   cursor.execute('SELECT * FROM cities')
   result = cursor.fetchall()
   conn.close()
   return result


print("‚úÖ")