**–û—à–∏–±–∫–∏ –∏ –∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ Telegram-–±–æ—Ç–∞**

### 1. –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–µ

**–û—à–∏–±–∫–∞:** –í –∫–æ–¥–µ –±—ã–ª–∏ –¥–≤–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –∏ —á–µ—Ä–µ–∑ –≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é (`callback` –∏ `process_city_input`), –Ω–æ –æ–Ω–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏ –ª–æ–≥–∏–∫—É.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
elif callback.data in cities:
   city = callback.data
   city_info = get_city_info(city)
   if city_info:
      description, image_url = city_info
      bot.send_photo(callback.message.chat.id, open(image_url, 'rb'))
      bot.send_message(callback.message.chat.id, f"üèôÔ∏è {city}\n\n{description}", parse_mode='Markdown')
```

**–†–µ—à–µ–Ω–∏–µ:** –°–æ–∑–¥–∞–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é `send_city_info(city, chat_id)`, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

def send_city_info(city, chat_id):
   city_info = get_city_info(city)
   if city_info:
      description, image_url = city_info
      with open(image_url, 'rb') as img:
         bot.send_photo(chat_id, img)
      bot.send_message(chat_id, f"üèôÔ∏è {city}\n\n{description}", parse_mode='Markdown')
```

---

### 2. –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (`city` vs `city_name`)

**–û—à–∏–±–∫–∞:** –í callback-–∑–∞–ø—Ä–æ—Å–∞—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `city`, –∞ –≤ `process_city_input` ‚Äì `city_name`, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏–ª–æ –∫ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è–º.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
inline_markup.add(types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{city_name}'))
```

**–†–µ—à–µ–Ω–∏–µ:** –ü—Ä–∏–≤–µ–ª–∏ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫ `city`, —á—Ç–æ–±—ã –≤–µ–∑–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å –æ–¥–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
inline_markup.add(types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{city}'))
```

---

### 3. –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–≥–æ–¥—ã (`callback_data`)

**–û—à–∏–±–∫–∞:** –ö–Ω–æ–ø–∫–∞ `"üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É"` –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∞ `callback_data=f'weather_{city_name}'`, –Ω–æ –≤ `callback`-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å `city = callback.data.split('_')[1]`, —á—Ç–æ –º–æ–≥–ª–æ –ª–æ–º–∞—Ç—å—Å—è, –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –∏–º–µ–ª –ø—Ä–æ–±–µ–ª—ã.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
elif callback.data.startswith('weather_'):
   city = callback.data.split('_')[1]
```

**–†–µ—à–µ–Ω–∏–µ:** –î–æ–±–∞–≤–∏–ª–∏ `urllib.parse.quote(city)` –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ callback, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≥–æ—Ä–æ–¥–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
import urllib.parse

inline_markup.add(types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{urllib.parse.quote(city)}'))
```

---

### 4. –û—à–∏–±–∫–∞ —Å `bot.send_photo(open(image_url, 'rb'))`

**–û—à–∏–±–∫–∞:** –ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è `open(image_url, 'rb')` –º–æ–≥–ª–æ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ `FileNotFoundError` –∏–ª–∏ `Unclosed file warning`.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
bot.send_photo(callback.message.chat.id, open(image_url, 'rb'))
```

**–†–µ—à–µ–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–µ–º `with open(image_url, 'rb') as img:` –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
with open(image_url, 'rb') as img:
   bot.send_photo(callback.message.chat.id, img)
```

---

### 5. –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã

**–û—à–∏–±–∫–∞:** –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –¥–∞–Ω–Ω—ã–µ –º–æ–≥–ª–∏ –Ω–µ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –¥–∞–∂–µ –ø–æ—Å–ª–µ 10 –º–∏–Ω—É—Ç, —Ç–∞–∫ –∫–∞–∫ `CACHE_TIMEOUT` —Å—Ä–∞–≤–Ω–∏–≤–∞–ª—Å—è —Å `time.time()` –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
if city in weather_cache and time.time() - weather_cache[city]['time'] < CACHE_TIMEOUT:
   return weather_cache[city]['data']
```

**–†–µ—à–µ–Ω–∏–µ:**
- –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å API –Ω–µ—É–¥–∞—á–Ω—ã–π, –Ω–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–µ—à.
- –í –∫–æ–¥–µ `weather_cache[city] = {'data': weather_data, 'time': current_time}` –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
if response.get("main"):
   weather_cache[city] = {'data': weather_data, 'time': current_time}
   return weather_data
```

---

### 6. –û—à–∏–±–∫–∞ —Å `callback_query_handler(func=lambda call: True)`

**–û—à–∏–±–∫–∞:** –¢–∞–∫–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω–∏–º–∞–ª –≤—Å–µ callback-–∑–∞–ø—Ä–æ—Å—ã, –≤–∫–ª—é—á–∞—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ, —á—Ç–æ –º–æ–≥–ª–æ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ –æ—à–∏–±–∫–∞–º.

```python
# –î–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda call: True)
```

**–†–µ—à–µ–Ω–∏–µ:**
- –î–æ–±–∞–≤–∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É `if 'weather_' in callback.data:` –ø–µ—Ä–µ–¥ —Ä–∞–∑–±–æ—Ä–æ–º –≥–æ—Ä–æ–¥–∞.
- –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback'–æ–≤ –≤—ã–≤–æ–¥–∏–º `bot.send_message(callback.message.chat.id, "‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")`.

```python
# –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda call: call.data.startswith('weather_') or call.data in cities)
```

---

### 7. –ó–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ –≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é (`input_city`) –Ω–µ –±—ã–ª —Å–≤—è–∑–∞–Ω —Å `select_city`

–¥–æ 
   def process_city_input(message):
    city_name = message.text
    city_info = get_city_info(city_name)
    if city_info:
        description, image_url = city_info
        bot.send_photo(message.chat.id, open(image_url, 'rb'))
        bot.send_message(message.chat.id, f"üèôÔ∏è {city_name}\n\n{description}", parse_mode='Markdown')
        
        inline_markup = types.InlineKeyboardMarkup()
        weather_btn = types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{city_name}')
        map_btn = types.InlineKeyboardButton('üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ', url=f'https://www.google.com/maps/search/?q={city_name}&hl=ru')
        inline_markup.row(weather_btn, map_btn)
        inline_markup.add(types.InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='city_list'))

        bot.send_message(message.chat.id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=inline_markup)
    else:
        bot.send_message(message.chat.id, "‚ùó –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

   def process_city_select(chat_id, city):
    """–û–¥–∏–Ω –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ, —Ç–∞–∫ –∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞."""
    city_info = get_city_info(city)
    if city_info:
        description, image_url = city_info
        bot.send_photo(chat_id, open(image_url, 'rb'))
        bot.send_message(chat_id, f"üèôÔ∏è *{city}*\n\n{description}", parse_mode='Markdown')

        inline_markup = types.InlineKeyboardMarkup()
        inline_markup.add(types.InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='city_list'))
        inline_markup.add(types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{city}'))
        inline_markup.add(types.InlineKeyboardButton('üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ', url=f'https://www.google.com/maps/search/?q={city}&hl=ru'))
        
        bot.send_message(chat_id, "–ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=inline_markup)
    else:
        bot.send_message(chat_id, "‚ùó –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

–ø–æ—Å–ª–µ
   def process_city(chat_id, city_name):
    city_info = get_city_info(city_name)
    if city_info:
        description, image_url = city_info
        bot.send_photo(chat_id, open(image_url, 'rb'))
        bot.send_message(chat_id, f"üèôÔ∏è *{city_name}*\n\n{description}", parse_mode='Markdown')

        inline_markup = types.InlineKeyboardMarkup()
        inline_markup.row(
            types.InlineKeyboardButton('üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', callback_data=f'weather_{city_name}'),
            types.InlineKeyboardButton('üó∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ', url=f'https://www.google.com/maps/search/?q={city_name}&hl=ru')
        )
        inline_markup.add(types.InlineKeyboardButton('‚¨Ö –ù–∞–∑–∞–¥', callback_data='city_list'))

        bot.send_message(chat_id, "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=inline_markup)
    else:
        bot.send_message(chat_id, "‚ùó –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

   @bot.callback_query_handler(func=lambda call: True)
   def callback(callback):
    if callback.data == 'city_list':
        markup = types.InlineKeyboardMarkup()
        buttons = [types.InlineKeyboardButton(city, callback_data=city) for city in cities]
        for i in range(0, len(buttons), 3):
            markup.row(*buttons[i:i+3])
        bot.send_message(callback.message.chat.id, "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=markup)

    elif callback.data == 'input_city':
        msg = bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
        bot.register_next_step_handler(msg, lambda m: process_city(m.chat.id, m.text))

    elif callback.data.startswith('weather_'):
        city = callback.data.split('_')[1]
        weather = get_weather(city)
        bot.send_message(callback.message.chat.id, f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n{weather}")

    elif callback.data in cities:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
        process_city(callback.message.chat.id, callback.data)
    else:
        bot.send_message(callback.message.chat.id, "‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

–£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äì —Ç–µ–ø–µ—Ä—å process_city –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π, –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥.

–ö–æ–¥ —Å—Ç–∞–ª –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ ‚Äì –≤—Å—ë —Å–≤–µ–¥–µ–Ω–æ –∫ –µ–¥–∏–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö.

–ö–Ω–æ–ø–∫–∏ —Ç–µ–ø–µ—Ä—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É ‚Äì –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.

–£–±—Ä–∞–Ω—ã –Ω–µ–Ω—É–∂–Ω—ã–µ else ‚Äì –¥–æ–±–∞–≤–ª–µ–Ω–∞ –±–æ–ª–µ–µ –ª–æ–≥–∏—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö.